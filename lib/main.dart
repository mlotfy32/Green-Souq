import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:flutter_stripe/flutter_stripe.dart';
import 'package:green_souq/core/utiles/bloc_observer.dart';
import 'package:green_souq/core/utiles/constanse.dart';
import 'package:green_souq/core/utiles/setup_service_locator.dart';
import 'package:green_souq/core/utiles/shared_pref/prefs_Keys.dart';
import 'package:green_souq/core/utiles/shared_pref/shared_pref.dart';
import 'package:green_souq/features/cart/data/models/cart_model.dart';
import 'package:green_souq/features/prefile/data/models/saved_model.dart';
import 'package:green_souq/firebase_options.dart';
import 'package:green_souq/green_souq.dart';
import 'package:hive_flutter/hive_flutter.dart';
import 'package:supabase_flutter/supabase_flutter.dart';

var prefs = SharedPref.preferences;
List<String> savedList = [];
int orders = 0;
var isRemembered;
void main() async {
  await dotenv.load();
  final supabaseUrl = await dotenv.env['SUPABASE_URL'];
  final supabaseAnonKey = await dotenv.env['SUPABASE_ANON_KEY'];
  SetupServiceLocator();
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
  await Supabase.initialize(url: supabaseUrl!, anonKey: supabaseAnonKey!);
  await SharedPref().instantiatePreferences();
  Bloc.observer = AppBlocObserver();
  await Hive.initFlutter();
  Hive.registerAdapter(CartModelAdapter());
  await Hive.openBox<CartModel>(Constanse.kCartBox);
  Hive.registerAdapter(SavedModelAdapter());
  await Hive.openBox<SavedModel>(Constanse.kSavedBox);
  isRemembered = await prefs.getBoolean(PrefsKeys.isLogin);
  savedList = (await prefs.getList(PrefsKeys.savedList)) ?? [];
  orders = (await prefs.getInt(PrefsKeys.userOrders)) ?? 0;
  final stribePublishableKey = dotenv.env['STRIPE_PUBLISHABLE_KEY'];
  Stripe.publishableKey = '$stribePublishableKey';
  runApp(const GreenSouq());
}
